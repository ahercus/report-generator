{"version":3,"sources":["reportWebVitals.js","InputForm.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","subjects","name","functions","FormWrapper","styled","Box","theme","display","flexDirection","alignItems","justifyContent","padding","spacing","backgroundColor","palette","background","paper","borderRadius","boxShadow","shadows","width","maxWidth","InputFieldsWrapper","_ref2","flexWrap","margin","minWidth","calculateLabelMargin","_document$querySelect","_document$querySelect2","marginRight","document","querySelector","clientWidth","TextAreaWrapper","_ref3","marginTop","minHeight","overflowY","InputForm","_useState","useState","_useState2","_slicedToArray","subject","setSubject","_useState3","_useState4","grade","setGrade","_useState5","_useState6","firstName","setFirstName","_useState7","_useState8","lastName","setLastName","_useState9","_useState10","writingSample","setWritingSample","_useState11","_useState12","sliderValues","setSliderValues","_useState13","_useState14","generatedComment","setGeneratedComment","_useState15","_useState16","loading","setLoading","_useState17","_useState18","setError","_useState19","_useState20","sliders","setSliders","studentName","_useState21","_useState22","setIsCopied","useEffect","currentSubject","find","s","map","func","index","id","LoadingIndicator","_jsx","sx","mt","children","CircularProgress","handleSubmit","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","performanceScores","requestBody","config","response","wrap","_context","prev","next","preventDefault","filter","slider","concat","join","prompt","max_tokens","temperature","headers","Authorization","process","axios","post","sent","data","choices","text","trim","t0","message","console","error","stop","_x","apply","arguments","gradeOptions","Array","from","length","_","i","_jsxs","Typography","variant","mb","component","noValidate","autoComplete","onSubmit","TextField","label","value","onChange","event","target","FormControl","InputLabel","htmlFor","Select","input","OutlinedInput","MenuItem","ml","mr","flexGrow","placeholder","newName","_objectSpread","Slider","className","newValue","_defineProperty","handleSliderChange","step","marks","min","max","valueLabelDisplay","mx","labelPlacement","Button","color","onClick","disabled","newId","Math","_toConsumableArray","noWrap","multiline","rows","defaultValue","fullWidth","type","textAlign","navigator","clipboard","writeText","createTheme","primary","main","secondary","default","success","typography","fontFamily","App","inputText","generatedText","setGeneratedText","ThemeProvider","global","env","NODE_ENV","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c465f22.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  CircularProgress,\n  OutlinedInput,\n  Slider,\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport axios from 'axios';\n\n\n\nconst subjects = [\n    { name: 'English Language Arts', functions: ['Reading Comprehension', 'Writing Skills', 'Grammar', 'Vocabulary', 'Oral Communication', 'Listening Skills'] },\n    { name: 'Mathematics', functions: ['Number Sense', 'Algebraic Skills', 'Geometry', 'Data Analysis', 'Problem Solving', 'Mathematical Reasoning'] },\n    { name: 'Science', functions: ['Scientific Method', 'Lab Skills', 'Data Interpretation', 'Critical Thinking', 'Conceptual Understanding', 'Scientific Communication'] },\n    { name: 'Social Studies', functions: ['Historical Knowledge', 'Geographical Skills', 'Civic Understanding', 'Economic Principles', 'Critical Thinking', 'Communication Skills'] },\n    { name: 'Physical Education', functions: ['Motor Skills', 'Fitness', 'Teamwork', 'Sportsmanship', 'Personal Responsibility', 'Health and Wellness'] },\n    { name: 'Art', functions: ['Creativity', 'Technique', 'Artistic Expression', 'Art History', 'Visual Literacy', 'Craftsmanship'] },\n    { name: 'Music', functions: ['Musical Theory', 'Instrument Skills', 'Vocal Skills', 'Ensemble Performance', 'Music History', 'Creativity'] },\n];\nconst FormWrapper = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '8px',\n    boxShadow: theme.shadows[1],\n    width: '80%',\n    maxWidth: '800px',\n  }));\n  \n  const InputFieldsWrapper = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    '& .MuiTextField-root': { margin: theme.spacing(1), minWidth: '200px' },\n    '& .MuiFormControl-root': { margin: theme.spacing(1), minWidth: '240px' }, // Updated minWidth\n  }));\n  \n  const calculateLabelMargin = () => {\n    const sliderWidth = document.querySelector(\".slider\")?.clientWidth;\n    const removeButtonWidth = document.querySelector(\".removeButton\")?.clientWidth;\n    const marginRight = sliderWidth - removeButtonWidth;\n    return marginRight > 0 ? marginRight : 0\n  };\n\n\n  const TextAreaWrapper = styled(Box)(({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '8px',\n    boxShadow: theme.shadows[1],\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    minHeight: '100px',\n    overflowY: 'auto',\n  }));\nconst InputForm = () => {\n    const [subject, setSubject] = useState(\"\");\n    const [grade, setGrade] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [writingSample, setWritingSample] = useState('');\n    const [sliderValues, setSliderValues] = useState({});\n    const [generatedComment, setGeneratedComment] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [sliders, setSliders] = useState([]);\n\n    const studentName = firstName + \" \" + lastName;\n\n    const [isCopied, setIsCopied] = useState(false);\n\n\n    const marks = [\n      { value: 1, label: \"Weak\" },\n      { value: 3, label: \"Developing\" },\n      { value: 5, label: \"Proficient\" },\n      { value: 7, label: \"Excels\" },\n    ];\n\n    useEffect(() => {\n        const currentSubject = subjects.find((s) => s.name === subject);\n        if (currentSubject) {\n            setSliders(\n                currentSubject.functions.map((func, index) => ({\n                    id: index + 1,\n                    name: func,\n                }))\n            );\n        }\n    }, [subject]);\n    \n    const LoadingIndicator = () => (\n        <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 1 }}>\n          <CircularProgress />\n        </Box>\n      );\n\n    const handleRemoveSlider = (id) => {\n        setSliders(sliders.filter((slider) => slider.id !== id));\n      };\n\n      const handleFunctionNameChange = (id, newName) => {\n        setSliders(sliders.map(slider => slider.id === id ? { ...slider, name: newName } : slider));\n      };\n    \n    \n      const addSlider = () => {\n        const newId = Math.max(...sliders.map((slider) => slider.id)) + 1;\n        setSliders([...sliders, { id: newId, name: \"\", placeholder: \"Add competency\" }]);\n      };\n      \n      \n      const handleSliderChange = (id, newValue) => {\n        const slider = sliders.find((slider) => slider.id === id);\n        if (slider) {\n          setSliderValues({ ...sliderValues, [slider.name]: newValue });\n        }\n      };\n    \n\n    const handleSubjectChange = (event) => {\n        setSubject(event.target.value);\n    };\n\n    const handleGradeChange = (event) => {\n        setGrade(event.target.value);\n    };\n\n    const handleFirstNameChange = (event) => {\n        setFirstName(event.target.value);\n    };\n\n    const handleLastNameChange = (event) => {\n        setLastName(event.target.value);\n    };\n\n    const handleWritingSampleChange = (event) => {\n        setWritingSample(event.target.value);\n    };\n\n    const copyToClipboard = () => {\n      navigator.clipboard.writeText(generatedComment);\n      setIsCopied(true);\n    };\n    \n\n      const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setError('');\n        setGeneratedComment(\"\");\n      \n        try {\n          const performanceScores = sliders\n            .filter((slider) => slider.name)\n            .map((slider) => `${slider.name}: ${sliderValues[slider.name] || 5}`)\n            .join(', ');\n      \n          const requestBody = {\n            prompt: `Generate a thoughtful and detailed report card comment for ${studentName} studying grade ${grade} ${subject}. Refer to the student's specific performance, based on: ${performanceScores}, but do not refer to the actual numbers. Provide relevant recommendations based on their performance. Draw upon the writing style of this sample: \"${writingSample}\". Comment:`,\n            max_tokens: 150,\n            temperature: 0.3,\n          };\n      \n          const config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`,\n            },\n          };\n      \n          const response = await axios.post(\n            \"https://api.openai.com/v1/engines/text-davinci-003/completions\",\n            requestBody,\n            config\n          );\n      \n          setLoading(false);\n          setGeneratedComment(response.data.choices[0].text.trim());\n        } catch (error) {\n          setLoading(false);\n          setError('Error generating comment: ' + error.message); // Update this line\n          console.error(\"Error generating comment:\", error);\n        }\n      };      \n    \n    const gradeOptions = Array.from({ length: 12 }, (_, i) => i + 1);\n\n    return (\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n            <Typography variant=\"h4\" sx={{ mb: 2 }}>\n                Teacher Report Card Comment Generator\n            </Typography>\n            <FormWrapper component=\"form\" noValidate autoComplete=\"off\"onSubmit={handleSubmit}>\n                <InputFieldsWrapper>\n              <TextField\n                label=\"First Name\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                value={firstName}\n                onChange={handleFirstNameChange}\n              />\n              <TextField\n                label=\"Last Name\"\n                name=\"lastName\"\n                variant=\"outlined\"\n                value={lastName}\n                onChange={handleLastNameChange}\n              />\n              <FormControl variant=\"outlined\">\n                <InputLabel htmlFor=\"grade-select\">Grade</InputLabel>\n                <Select\n                  label=\"Grade\"\n                  value={grade}\n                  onChange={handleGradeChange}\n                  input={<OutlinedInput name=\"grade\" id=\"grade-select\" />}\n                >\n                  {gradeOptions.map((value) => (\n                    <MenuItem key={value} value={value}>\n                      {value}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl variant=\"outlined\">\n                <InputLabel htmlFor=\"subject-select\">Subject</InputLabel>\n                <Select\n                  label=\"Subject\"\n                  value={subject}\n                  onChange={handleSubjectChange}\n                  input={<OutlinedInput name=\"subject\" id=\"subject-select\" />}\n                >\n                  {subjects.map((subject) => (\n                    <MenuItem key={subject.name} value={subject.name}>\n                      {subject.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              </InputFieldsWrapper>\n              {subject && (\n  <Box sx={{ mt: 2, width: '100%' }}>\n    <Typography variant=\"h6\">Performance Scores:</Typography>\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        mt: -1,\n        mb: 1,\n        ml: 25,\n        mr: calculateLabelMargin(),\n        flexGrow: 1,\n        width: '65%',\n      }}\n    >\n      <Typography variant=\"body2\">Weak</Typography>\n      <Typography variant=\"body2\">Developing</Typography>\n      <Typography variant=\"body2\">Proficient</Typography>\n      <Typography variant=\"body2\">Excels</Typography>\n    </Box>\n    {sliders.map((slider) => (\n          <Box\n            key={slider.id}\n            sx={{\n              mt: 2,\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n          <TextField\n            label=\"Competency\"\n            value={slider.name}\n            placeholder={slider.placeholder || \"\"}\n            onChange={(e) =>\n              handleFunctionNameChange(slider.id, e.target.value)\n            }\n            sx={{ minWidth: '200px', flexGrow: 1 }}\n          />\n          <Slider\n  className=\"slider\" // Add this line\n  value={sliderValues[slider.name] || 5}\n  onChange={(e, newValue) => handleSliderChange(slider.id, newValue)}\n  step={1}\n  marks={slider.id === 1 ? [1, 3, 5, 7].map((value) => ({ value, label: '' })) : null}\n  min={1}\n  max={7}\n  valueLabelDisplay=\"auto\"\n  sx={{ mx: 1, flexGrow: 1, width: '100%' }}\n  labelPlacement=\"top\"\n/>\n<Button\n  className=\"removeButton\"\n  variant=\"outlined\"\n  color=\"error\"\n  onClick={() => handleRemoveSlider(slider.id)}\n  sx={{ ml: 1 }}\n  disabled={sliders.length <= 1}\n>\n  Remove\n</Button>\n\n            \n          </Box>\n        ))}\n      <Button\n      sx={{ mt: 2 }}\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={addSlider}\n      disabled={sliders.length >= 10}\n    >\n      Add Competency\n    </Button>\n  </Box>\n  )}\n            {/* Writing Sample */}\n            <TextField\n              id=\"writing-sample\"\n              label={\n                <Typography noWrap={false}>\n                  [Optional] Paste some of your own writing here. The tool will attempt to emulate your writing style.\n                </Typography>\n              }\n              multiline\n              rows={4}\n              defaultValue=\"\"\n              onChange={handleWritingSampleChange}\n              variant=\"outlined\"\n              fullWidth\n              sx={{ mt: 2 }}\n            />\n         <Button\n         sx={{ mt: 2 }}\n         type=\"submit\" // Added type=\"submit\"\n         variant=\"contained\"\n         color=\"primary\"\n         disabled={!firstName || !lastName || !grade || !subject}\n      >\n        Generate Comment\n      </Button>\n      {loading && <LoadingIndicator />}\n            </FormWrapper>\n        \n\n            <Box sx={{ mt: 4, mb: 4, width: '80%', maxWidth: '800px', textAlign: 'center' }}>\n  <Typography variant=\"h6\">Generated Comment:</Typography>\n  <TextAreaWrapper>\n    <Typography>{generatedComment || 'No comment generated yet.'}</Typography>\n  </TextAreaWrapper>\n  {generatedComment && (\n    <Button type=\"submit\"\n      sx={{ mt: 2, mx: 'auto' }}\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={copyToClipboard}\n    >\n      Copy to clipboard\n    </Button>\n  )}\n</Box>\n\n\n\n    </Box>\n  );\n};\n\nexport default InputForm;","import { createTheme, ThemeProvider } from '@mui/material/styles';\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport InputForm from './InputForm'; // Import the InputForm component\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#6200ee',\n    },\n    secondary: {\n      main: '#03dac6',\n    },\n    background: {\n      default: '#f5f5f5',\n      paper: '#ffffff',\n    },\n    text: {\n      primary: '#212121',\n      secondary: '#757575',\n    },\n    error: {\n      main: '#b00020',\n    },\n    success: {\n      main: '#4caf50',\n    },\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  },\n});\n\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [generatedText, setGeneratedText] = useState(\"\");\n\n  const handleChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"https://api.openai.com/v1/tokens\", {\n        prompt: inputText,\n      });\n      setGeneratedText(response.data.choices[0].text);\n    } catch (error) {\n      console.error(\"Error generating text:\", error);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <form onSubmit={handleSubmit}>\n          {/* ...form contents */}\n        </form>\n        <div>\n         \n          <p>{generatedText}</p>\n        </div>\n        {/* Add InputForm component here */}\n        <InputForm />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Check if the process object is undefined and define a basic process object to avoid the error\nif (typeof process === 'undefined') {\n  global.process = {\n    env: {\n      NODE_ENV: 'development',\n    },\n  };\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}